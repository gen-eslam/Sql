--select first_name ||' '|| last_name as "full name" ,salary from employees where department_id=80;
--select * from regions where region_name ='Europe';
--select DISTINCT job_id from employees;
--desc jobs;
--select last_name as name,job_id as job,department_id as department ,hire_date   from employees where hire_date='21-jun-20 07';
--select * from countries where country_name='India';
--select location_id,street_address,city from locations where location_id=1000;
--select department_id,department_name ,manager_id from departments where department_name='Marketing';
--select * from departments where department_id >= 90;
--select * from departments where location_id in (1800,2700);
--select last_name,salary,department_id from employees where salary between 4900 and 7000;
--select last_name,salary,department_id from employees where last_name like 'M%';
--select last_name,salary,department_id from employees where last_name like '_i%';
--select last_name,salary,department_id from employees where job_id like 'IT/%' escape '/';
--select * from employees where job_id like 'IT%' ;
--select last_name,salary,commission_pct from employees where commission_pct is null;
--select last_name ,salary from employees where salary > 16000;
--select last_name,salary from employees where salary between 11000 and 14000;
--select department_name,manager_id,location_id from departments where department_id in (10,20,50);
--select last_name,department_id from employees where first_name like '__s%';
--select last_name,salary from employees where commission_pct is not null;
--select last_name,job_id,salary ,department_id from employees where department_id =100 and salary>= 12000;
--select last_name,job_id,salary ,department_id from employees where department_id =100 or salary>= 12000;
--select last_name ,salary ,commission_pct,department_id,job_id from employees where job_id = 'SA_MAN' and commission_pct is not null;
--select last_name ,department_id,salary from employees where department_id =60 or department_id=90 and salary>10000;
--select last_name,department_id,salary from employees where (department_id = 60 or department_id = 90)and salary>10000;
--select first_name ||' '|| last_name as "Full Name",hire_date ,department_id from employees where hire_date between '1-jan-2008' and '1-jan-2009';
--select first_name ||' '|| last_name as "Full Name",hire_date ,department_id from employees where hire_date >= '1-jan-2008' and hire_date <= '31-dec-2008';
--select last_name ,job_id ,salary from employees where job_id like 'IT_PROG' and salary not in(4200,4800); 
--select last_name,job_id,department_id,salary from employees where department_id=90 ORDER by salary desc;
--select location_id ,street_address,city from locations order by 1;--> sort by number of columns 
--select last_name,department_id,salary from employees where salary>=12000 order by department_id desc,salary;
--select employee_id , last_name,salary from employees order by employee_id fetch first 5 rows only;
--select employee_id , last_name,salary from employees order by employee_id offset 4 rows fetch first 5 rows only;
--select employee_id , last_name,salary from employees order by employee_id offset 4 rows fetch next 5 rows only;
--select employee_id , last_name,salary from employees order by employee_id  fetch first 10 percent rows only;
--select department_id,department_name from departments where location_id =1700 order by department_id offset 3 rows fetch next 4 rows only; 
--select last_name ,job_id,salary,department_id from employees where department_id = &depid;
--select location_id,street_address,city from locations where city like '%&cityvar%';
--select location_id,street_address,city from locations where city like '%&cityvar%';
--select last_name,salary,&col from employees where &col =90;-->every time
--select last_name,salary,&&col from employees where &col =90;-=>one time for ever
------
--define emp =100
--set VERIFY off
--select * from employees where employee_id = &emp;
--undefine emp
------
--set verify on
--select department_id,employee_id,last_name,salary,manager_id from employees where department_id = &value order by &value  ;
--
--select lower(first_name),upper(last_name), initcap(first_name||' '||last_name) as "Full Name" from employees where department_id>=90;
--select region_id,region_name from regions where upper(region_name)='EUROPE';
--SELECT UPPER (LAST_NAME)"NAME",DEPARTMENT_ID "DEPATMENT ID" FROM EMPLOYEES WHERE UPPER(LAST_NAME) LIKE UPPER('&val%') order by last_name;
--select first_name,last_name,concat(concat(last_name,' '),first_name) as "full name" from employees where department_id>=110;
-- last_name,substr(last_name,1,4) "partial",substr(last_name,-2,2) "last two char",length(last_name)"name length",instr (last_name,'s') "contain's S" from employees where department_id>=110;
--select last_name,lpad(last_name,10,'*')"LPAD",rpad(last_name,10,'*')"RPAD",trim('     killjoy    ') "trim",replace(last_name,'gg','ff')"replace" from employees where department_id>=110;
--select department_id,department_name,length(department_name)"Length" ,substr(department_name,-4,4) from departments where location_id=1700 order by 3 desc;
--select country_id,country_name,replace(country_name,substr(country_name,1,2),'**') from countries ;
--select ceil(76.878),floor(76.878) from dual;--DUAL iS a public table that you can use to view results from functions and calculations, It contains only one column and one row.
--select trunc (76.878,2),trunc(76.878),trunc (76.878,-1) from dual;
--select mod(17,4),mod(23,5),mod(100,30) from dual;
--select round (76.878,2),round(76.878),round (76.878,-1) from dual;
--select employee_id ,last_name,salary, salary+(salary*10/100)  "sala" ,round(salary+(salary*10/100),0)"NEW SALARY" from employees where department_id=100 order by &val;
--select mod(30,7),ceil(79.3),floor(34.7) from dual;
--select sysdate from dual;
--select current_date ,current_timestamp from dual;
--select sysdate,round(sysdate,'month'),trunc(sysdate,'month') from dual;
--select sysdate,round(sysdate,'year'),trunc(sysdate,'year') from dual;
--select sysdate,add_months(sysdate,6),last_day(sysdate),next_day(sysdate,'friday'),trunc(months_between(sysdate,'01_jan_22'))from dual;
--select last_name ,department_id ,(sysdate-hire_date) as days from employees where department_id=90;
--select sysdate,sysdate-1, sysdate+1 from dual;
--select last_name,hire_date ,add_months(hire_date,3) from employees where department_id=30;
--select last_name,salary,salary+'300' "increased sal" from employees where department_id=90;
--select last_name,department_id,hire_date from employees where hire_date between '01-dec-2005' and '01 march 06';
-----------------
--select 
--TO_CHAR (SYSDATE, 'YYYY/MM/DD HH:MI:SS') "format1",
--TO_CHAR (SYSDATE, 'YYYY-Mon-Day HH:MI:SS AM') "format2",
--TO_CHAR (SYSDATE, 'fmDY-MONTH "of" YYYY HH24:MI:SS') "format3" from dual;
-----------------
--select hire_date, TO_CHAR(hire_date,'fmDdspth-month "of" yyyy')"formant4",TO_CHAR(hire_date,'fmDdsp-month "of" yyyy')"format5" from employees where department_id =90;
--select last_name,salary, to_char(salary,'99,999.99')"format1" from employees where department_id=90;
--select last_name,salary,hire_date,to_char(add_months(hire_date,4),'Day,"the " Ddspth "of"  Month, yyyy.') from employees where department_id=100;
-- session set nls_currency = 'SAR'
--select last_name ||' earns'|| to_char(salary,'L99,999,99') ||' monthly but wants' || to_char(salary*3 ,'$99,999.99') from employees;
--select to_number('$48,746.45','$99,999.99')+1000 "format1"from dual;
--select last_name,department_id,hire_date from employees where hire_date between to_date('17-02-2005','dd-mm-yyyy') and  to_date('17-03-2005','dd-mm-yyyy');
--select to_number('$5,200.3','$99,999.9')+500 from dual;
--select last_name ,salary ,hire_date from employees where hire_date between to_date('1-02-2004','dd-mm-yyyy') and to_date('31-03-2004','dd-mm-yyyy');
--SELECT TO_CHAR(NEXT_DAY(LAST_DAY(SYSDATE),'MON'),'dd "is the first Monday for " fmmonth rrrr') FROM dual;
--select last_name,salary,commission_pct,nvl(commission_pct,0),(salary*12) +(salary*12*nvl(commission_pct,0)) as "annual_sal" from employees order by 2;
--select last_name,salary,commission_pct,nvl2(commission_pct,'has com','no com')"com?",(salary*12) +(salary*12*nvl2(commission_pct,commission_pct,0)) as "annual_sal" from employees order by salary;
--select nullif(10,20),nullif(10,10)from dual;
--select last_name ,salary ,commission_pct,coalesce(12*salary+(salary*12*commission_pct) , 12*salary , 0 ) as "annual_sal" from employees order by salary;
--select department_name,department_id,manager_id,nvl2(manager_id,'has manager','no manager')"manager" from departments where location_id=1700;
--select last_name,salary,nvl(to_char(commission_pct),'No Commission.') from employees where department_id in(110,80);
--SELECT LAST_NAME ,JOB_ID ,SALARY, CASE JOB_ID WHEN 'ST_MAN' THEN SALARY+300 WHEN 'FI_MGR' THEN SALARY+500 WHEN 'AD_VP' THEN SALARY+1000 ELSE SALARY END AS "NEW_SALARY" FROM EMPLOYEES ORDER BY JOB_ID;
--SELECT LAST_NAME,JOB_ID,SALARY,DECODE(JOB_ID,'ST_MAN',SALARY+300,'FI_MGR',SALARY+500,'AD_VP',SALARY+1000,SALARY) AS "NEW_SALARY" FROM EMPLOYEES ORDER BY JOB_ID;
--select last_name ,job_id,case job_id when 'AD_PRES' then 'A' when 'IT_PROG' then 'B' when 'SA_REP' then 'C' else '0'end as "grade" from employees order by 3;
--select last_name ,job_id,decode(job_id,'AD_PRES','A','IT_PROG','B','SA_REP','C','0') as "grade" from employees order by 3;
--select min(salary)"min",max(salary)"max",round(avg(salary)) "average",sum(salary)"sum",count(*)"count" from employees;
--select max(salary),min(salary),sum(salary),round(avg(salary),2) from employees where department_id=100;
--select count(*) from departments where location_id=1700;
--select count(distinct job_id) from employees;
--select DISTINCT job_id from employees;  
--select count(DISTINCT department_id) from employees;
--select count(DISTINCT location_id) from departments;
--select count(DISTINCT manager_id) from employees;
--select job_id,avg(salary) from employees group by job_id order by 2;
--select department_id ,count(employee_id) from employees  GROUP by department_id;
--select department_id,job_id,employee_id from employees  order by department_id;
--select department_id,job_id,count(employee_id) from employees group by department_id,job_id order by department_id;
--select job_id "job",count(employee_id) from employees group by job_id order by 2 desc;
--select location_id,count(department_id) from departments group by location_id;
--select job_id,department_id, sum(salary),trunc(avg(salary)),max(salary),min(salary) from employees group by job_id,department_id order by 2,1;
--select department_id,trunc(avg(salary),2) from employees group by department_id;
--select department_id,trunc(avg(salary),2) from employees group by department_id having avg(salary)>10000;
--select department_id ,sum(salary) sal from employees where department_id in (80,90,110) GROUP by department_id having sum(salary)>10000 order by 2;
--select region_id,count(*) from countries group by region_id having count(*)>5 order by 1 ;
--select job_id, sum(salary) from employees where department_id in(50,80) GROUP by job_id having sum(salary)>=60000; 
--select department_id ,department_name,city from departments natural join locations order by 1;
--select department_name,city, street_address,country_name from locations NATURAL join countries,departments;
--select last_name,department_id,job_id,job_title from employees natural join jobs where department_id in(10,90,20); 
--select department_id ,department_name,city from departments  join locations using (location_id) order by 1;
--select department_name ,city, street_address,country_name from departments join locations using(location_id) join countries using(country_id);
--select last_name,department_id,job_id,job_title from departments join employees using (department_id) join jobs using(job_id)   where department_id in (10,90,20);
--select country_id,country_name,region_name from countries join regions using(region_id);
-- select department_name,department_id,city from departments join locations on (departments.location_id = locations.location_id)order by 2;
--select last_name,jobs.job_id,job_title from employees join jobs on (employees.job_id = jobs.job_id)order by jobs.job_id;
--select e.last_name,j.job_id,j.job_title from employees e join jobs j on(e.job_id = j.job_id) and e.department_id=90 order by j.job_id;
--select last_name,department_id,department_name,city from employees  join departments using(department_id) join locations using(location_id) where locations.city like'London'; 
--select e.last_name, e.department_id, d.department_name, l.city from employees e join departments d on (e.department_id=d.department_id) join locations l on (d.location_id=l.location_id) and l.city='London';
--select e.last_name as "Employee Name",m.last_name AS "manager name" from employees e join employees m on (e.manager_id=m.employee_id) order by e.employee_id;
--select e.employee_id "employee" ,e.last_name "last employee name" ,m.employee_id "manager id ",m.last_name " manager name" from employees e join employees m on(e.manager_id=m.employee_id) order by m.last_name;
--select e.last_name,e.department_id,d.department_name from employees e left outer join departments d on e.department_id=d.department_id order by 2;
--select l.city,c.country_name from locations l full outer join countries c on l.country_id=c.country_id order by 1 ;
--select c.*,r.* from countries c cross join regions r ;--=> select * from countries  cross join regions  ;
--select last_name,salary from employees where salary > (select salary from employees where last_name = 'Chen') order by 2;
--select last_name ,salary ,department_id from employees where salary >= (select trunc(avg(salary))from employees) order by 2 desc;
--select last_name,hire_date,department_id from employees where hire_date>(select hire_date from employees where last_name like 'Lee');
--select last_name ,salary , department_name from employees  join departments using(department_id) where salary>= (select avg(salary)from employees)order by salary;
--select employee_id,last_name,salary,department_id from employees where salary in(select min(salary) from employees group by department_id);
--select employee_id ,last_name,salary ,department_id from employees where salary <= any (select min(salary)from employees group by department_id) order by department_id;
--select employee_id ,last_name,salary ,department_id from employees where salary > all (select min(salary)from employees group by department_id) order by department_id;
--select last_name ,salary,email from employees where department_id in (select department_id from employees where last_name like 'J%');
--select * from employees where salary > any(select salary from employees where department_id =110);
--select last_name , job_id , department_id , salary from employees where (salary , department_id) = (select salary ,department_id from employees where last_name = 'Matos') and last_name != '3Matos';
--select last_name ,job_id,department_id from employees where (job_id,department_id) =(select job_id,department_id from employees where last_name ='Lee' )order by 1;
--select department_id,job_id from employees where department_id =10 UNION select department_id,job_id from employees where department_id =20 UNION select department_id,job_id from employees where department_id =90;
--select department_id,job_id from employees where department_id in(10,20,90)
--select employee_id,job_id from employees  intersect select employee_id,job_id from job_history;
--select department_id from departments  minus select department_id from employees;
--select location_id,city,street_address from locations MINUS select location_id,city,street_address from departments join locations using (location_id);
--select employee_id,job_id from employees intersect select  employee_id,job_id from job_history ;
--insert into departments (department_id,department_name,manager_id,location_id) values (300,'Supply Chain',null,1800);
-- update departments set manager_id =200 where department_id=40;
--select * from departments where department_id =40;
--update employees set salary = salary+300,email ='testmail@test.com' where employee_id=131;
--select * from employees where employee_id=131;
--select* from employees where employee_id=132;
--update employees set salary = (select salary from employees where employee_id=133) where employee_id=132;
--select* from employees where employee_id=132;
--update employees set department_id=(select department_id from departments where department_name='IT'),salary =(select salary from employees where employee_id=133)where employee_id=132;
--delete from departments where department_id=120;
--Create table my_emp(empid number, name varchar2(50), salary number, hiredate date);
--insert into my_emp values(1,initcap('john'),2000,to_date('01-feb-2018','dd-mon-yyyy'));
--select * from my_emp;
--insert into my_emp values(2,initcap('sam'),3000,to_date('23-nov-2020','dd-mon-yyyy'));
--update my_emp set salary=salary+500 where empid=1;
--SELECT* FROM my_emp;
--commit
--insert into my_emp values(3,initcap('tom'),5000,sysdate);
--SELECT * FROM my_emp;
--savepoint A
--delete my_emp;
--select * from my_emp;
--rollback to savepoint A;
--commit
--truncate table my_emp
--create table emp_new (empno number(3), ename varchar2(40),email varchar(50),hiredate date ,deptid number(3));
--create table emp_new2 (empno number(3), ename varchar2(40),email varchar(50),hiredate date default sysdate ,deptid number(3));
--create table dept (depitid number(7),deptname varchar2(50));
--desc dept
--create table emp (emp_id number(8),last_name varchar2(50),hire_date date default sysdate, dept_id number(7));
--desc emp
--insert into emp (EMP_ID,LAST_NAME,DEPT_ID) values(10,'Fares',114);
--SELECT * FROM EMP;
-- CREATE TABLE EMP_RETIRED (empno number(3),ename varchar2(40) not null,email varchar(50),deptid number(3));
-- insert into emp_retired values(1,null,'test@gmail.com',100); >>error
--create table emp2 (emp_no number(3),e_name varchar2(40) not null,email varchar2(50),salary number(6) check(salary between 500 and 24000),depit_id number(3));
--insert into emp2 values(1,'fares','test@yahoo.com',500,100)
--create table student (student_id number(9) not null ,full_name varchar2(50) not null ,email varchar2(40) default 'test@test.com',registered_hours number(4) check( registered_hours>0))
--INSERT INTO student (student_id,full_name,registered_hours) VALUES ( 10,'fares', 1);
--alter table emp2 modify emp_no unique;
--select * from emp2;
--insert into emp2 values(2,'fares','test@gmail.com',5000,100)
--create table instructor (inst_id number(9) CONSTRAINT prim  primary key  ,inst_name varchar2(50) CONSTRAINT not_null not null ,email varchar2(40) default 'test@test.com'CONSTRAINT un unique , faculty_name varchar2(40));
--commit
--create table dept_new(depit_id number(7) primary key ,dept_name varchar2(20) not null ,loc_id number(4));
--create table emp_new2 (emp_id number(7) primary key ,emp_name varchar2(40),email varchar2(60),salary number(5)
--check(salary between 400 and 20000),depit_id number(7), constraint forq_key  foreign key (depit_id) REFERENCES dept_new (depit_id));
--insert into dept_new values(110,'it',666);
--insert into emp_new2 values(1,'tom','tom@test.com',4000,110);
--create table emp_new3 (emp_id number(7) primary key ,emp_name varchar2(40) not null ,email varchar2(60) unique ,salary number(5)
--check(salary between 400 and 20000),depit_id number(7), constraint forq_key  foreign key (depit_id) REFERENCES dept_new (depit_id) on delete cascade );
--create table emp_new4 (emp_id number(7) primary key ,emp_name varchar2(40) not null ,email varchar2(60) unique ,salary number(5)
--check(salary between 400 and 20000),depit_id number(7), constraint forq_key  foreign key (depit_id) REFERENCES dept_new (depit_id) on delete set null );
--create table emp_copy as select * from emp_new;
--alter table emp add (frist_name varchar2(50));
--alter table emp drop (frist_name);
--alter table emp rename column LAST_NAME to frist_name;
--desc emp
--ROLLBACK;
--alter table emp modify (frist_name varchar2(6));
--alter table emp read only;
--alter table emp read write;
--drop table emp2;
--drop table emp PURGE;
--------------------------
--desc user_objects;
--desc all_objects;
--desc user_tables;
--desc all_tables;
--desc user_tab_columns;
--desc all_tab_columns;
--desc user_constraints;
--desc all_constraints;
--desc user_cons_columns;
--desc all_cons_columns
--select object_name ,object_type,created,status from user_objects; 
--select object_name ,object_type,created,status from all_objects;
--select table_name ,status,read_only from user_tables;
--select table_name ,status,read_only from all_tables;
--select * from user_tab_columns where table_name= 'EMPLOYEES';
--select * from all_tab_columns;
--select * from user_constraints;
--select * from all_constraints;
--select * from user_cons_columns;
--select * from all_cons_columns;
--------------------------------------
 --create view empv90 as select employee_id,last_name,salary,job_id from employees where department_id=90;
 --desc empv90
 --select * from empv90;
 --desc all_views
--create view empv_avgsal as select department_id,round(avg(salary)) as "AVG_SAL" from employees group by department_id;
--desc empv_avgsal;
--select * from empv_avgsal;
--create view emp_vu40 as select employee_id,last_name || ' '|| first_name as "FULL_NAME",department_id from employees where department_id=40;
--desc emp_vu40;
--create view emp_vu_details as select employee_id,first_name ||' '|| last_name "full name",salary,department_name from employees join departments using (department_id); 
--desc emp_vu_details;
--select * from emp_vu_details;
--CREATE OR REPLACE VIEW EMPV_AVGSAL (DEPT_ID,AVG_SALARY) AS SELECT DEPARTMENT_ID,ROUND(AVG(SALARY))FROM EMPLOYEES GROUP BY DEPARTMENT_ID;
--select * from empv_avgsal;
--desc empv_avgsal;
--create or replace view emp_vu40 as select employee_id,last_name||' '||first_name as "full name",department_id,hire_date from employees where department_id=40;
--desc emp_vu40;
--select * from emp_vu40;
--create or replace view depv1700 as select department_id,department_name,location_id from departments where location_id=1700 with check option ;
--insert into depv1700 values(300,'new department',1800);
--create or replace view depv1700 as select department_id,department_name,location_id from departments where location_id=1700 with read only ;
--insert into depv1700 values(100,'fares');
--alter table emp_new add (salary number(6));
--desc emp_new
--create view emp_svu (salary) as select sum(salary) from employees group by (department_id);
--insert into emp_svu values (1000);
--alter table emp_new add(emp_id number(4));
--create view emp_vu as select ename,email,salary from emp_new;
--insert into emp_vu values('fares','test@gmail.com',1500);
--create or replace view emp_vu as select ename,email,salary,emp_id from emp_new;
--insert into emp_vu values('fares','test@gmail.com',1500,44);
--select * from emp_new;
--select * from user_views;
--drop view emp_svu ;
--drop view emp_vu;
--drop view emp_vu40;
--commit
--create SEQUENCE emp_empid_seq start with 300 increment by 5 maxvalue 999999 nocache nocycle;
--create sequence dept_seq start with 100 increment by 5 maxvalue 1000 nocache nocycle;
--drop SEQUENCE test_seq;
--create sequence test_seq start with 10 increment by -2 minvalue 0 maxvalue 20 nocache nocycle;
--insert into employees values (emp_empid_seq.nextval,'TOM','JOHN','tom@test.com',null,sysdate,'IT_PROG',1000,null,null,NULL);
--select * from employees
--alter sequence emp_empid_seq increment by 10 maxvalue 999999999 nocache nocycle;
--drop SEQUENCE dept_seq
--create sequence dept_seq start with 100 maxvalue 1000 increment by 5 nocache nocycle;
--select sequence_name from user_sequences;
--drop sequence test_seq;
--create sequence test_seq start with 10 increment by -2 MINVALUE 0 maxvalue 20 nocache nocycle; 
--CREATE SEQUENCE seq1 START WITH 100 INCREMENT BY 10 MAXVALUE 200 CYCLE NOCACHE;
--SELECT seq1.nextval FROM dual;
--create synonym emp_syn for empv_avgsal;
--select * from emp_syn;
--create SYNONYM seq_syn for dept_seq;
--create synonym emp_vu_syn for emp_vu_details;
--select * from emp_vu_syn;

